============================================================
Урок 11: СКУД на базе RFID и сервопривода
============================================================

Теоретическая часть
-------------------
В этом примере используется RFID-модуль (RC522) для считывания меток (карт, брелков) и сервопривод для управления "замком" или дверцей. Если считанный UID (уникальный идентификатор) карты присутствует в списке `authorized_uids`, дверь "открывается" (сервопривод поворачивается), иначе доступ запрещается.

Необходимые компоненты
----------------------
- Raspberry Pi
- Модуль RFID (RC522)
- Сервопривод (например, SG90)
- Соединительные провода

Схема подключения
-----------------
.. figure:: images/lesson11.png
   :width: 80%
   :align: center

Запуск кода
-----------
1. Создайте файл `rfid_servo.py` в папке `lessons/lesson11/`:

   .. code-block:: bash

      nano lessons/lesson11/rfid_servo.py

2. Скопируйте в него следующий код.
3. Убедитесь, что необходимые библиотеки установлены (`rc522`, `gpiozero`) и SPI включён.
4. Запустите программу:

   .. code-block:: bash

      python3 lessons/lesson11/rfid_servo.py

Код программы
-------------
Файл: `lessons/lesson11/rfid_servo.py`

.. code-block:: python

   from rc522 import RC522
   from gpiozero import Servo
   import time

   # Настройка RFID-ридера
   rc = RC522()
   rc.Pcd_start()

   # Настройка сервопривода (используй нужный GPIO-пин)
   servo = Servo(17)  # GPIO17 (можно заменить на нужный)

   # Список разрешённых UID (пример формата '13E2191C')
   authorized_uids = [
       "13E2191C",  # Пример UID карты
       "AABBCCDD"   # Можно добавить другие UID
   ]

   print("Система СКУД запущена. Поднесите карту...")

   try:
       while True:
           # Считываем UID
           uid = rc.get_uid()  # Предполагается, что метод get_uid() возвращает UID в 16-ричном виде
           if uid:
               print(f"Считанный UID: {uid}")

               if uid in authorized_uids:
                   print("✅ Доступ разрешён! Открываю дверь...")
                   servo.max()  # Поворачиваем сервопривод в положение "открыто"
                   time.sleep(2)
                   servo.min()  # Возвращаем в исходное положение
               else:
                   print("❌ Доступ запрещён!")

           time.sleep(1)  # Задержка для защиты от повторного считывания
   except KeyboardInterrupt:
       print("\nВыход из программы.")

Разбор кода
-----------
- `RC522()` – инициализируем RFID-модуль RC522.
- `rc.Pcd_start()` – запускаем процесс считывания.
- `servo = Servo(17)` – используем библиотеку gpiozero, создавая объект Servo на GPIO17.
- Список `authorized_uids` – содержит разрешённые метки. Сопоставление считываемого UID с этим списком и определяет разрешить или запретить доступ.
- `servo.max()` / `servo.min()` – положения сервопривода "открыто" и "закрыто".

Ожидаемый результат
-------------------
1. При поднесении карты с UID из `authorized_uids` появляется надпись "Доступ разрешён", сервопривод поворачивается на 2 секунды, затем возвращается.
2. Если UID не в списке, выводится "Доступ запрещён".

.. figure:: images/rfid_servo.gif
   :width: 50%
   :align: center

   **Рис. 2:** Пример управления замком с помощью RFID и сервопривода

Завершение работы
-----------------
Нажмите **Ctrl + C** для выхода. Теперь вы можете использовать связку RFID+сервопривод для создания простейшей системы контроля доступа (СКУД)!
