============================================================
–£—Ä–æ–∫ 11: –†–∞–±–æ—Ç–∞ —Å —ç–Ω–∫–æ–¥–µ—Ä–æ–º (CircuitPython) üîÑ
============================================================

–¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∞—è —á–∞—Å—Ç—å
-------------------
**–†–æ—Ç–æ—Ä–Ω—ã–π —ç–Ω–∫–æ–¥–µ—Ä** ‚Äì —ç—Ç–æ –ø–æ–≤–æ—Ä–æ—Ç–Ω—ã–π –º–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç —É–≥–ª–æ–≤–æ–µ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Ä–∞—â–µ–Ω–∏—è. –í –æ—Ç–ª–∏—á–∏–µ –æ—Ç –ø–æ—Ç–µ–Ω—Ü–∏–æ–º–µ—Ç—Ä–∞, —ç–Ω–∫–æ–¥–µ—Ä –º–æ–∂–µ—Ç –≤—Ä–∞—â–∞—Ç—å—Å—è –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏–º–ø—É–ª—å—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–∑–≤–æ–ª—è—é—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏ —Å–∫–æ—Ä–æ—Å—Ç—å –≤—Ä–∞—â–µ–Ω–∏—è. –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ —ç–Ω–∫–æ–¥–µ—Ä–æ–≤ —Ç–∞–∫–∂–µ –∏–º–µ—é—Ç –≤—Å—Ç—Ä–æ–µ–Ω–Ω—É—é –∫–Ω–æ–ø–∫—É (–ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –≤–∞–ª).

–í CircuitPython –¥–ª—è –ø—Ä–æ—Å—Ç–æ–π —Ä–∞–±–æ—Ç—ã —Å —ç–Ω–∫–æ–¥–µ—Ä–∞–º–∏ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫—É `adafruit_rotaryio`, –∫–æ—Ç–æ—Ä–∞—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Å–µ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏–≥–Ω–∞–ª–æ–≤ —ç–Ω–∫–æ–¥–µ—Ä–∞.

–ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
----------------------
- Raspberry Pi
- –†–æ—Ç–æ—Ä–Ω—ã–π —ç–Ω–∫–æ–¥–µ—Ä —Å –≤—ã—Ö–æ–¥–∞–º–∏ A, B –∏ –∫–Ω–æ–ø–∫–æ–π
- –°–æ–µ–¥–∏–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–æ–¥–∞
- –†–µ–∑–∏—Å—Ç–æ—Ä—ã 10 –∫–û–º –¥–ª—è –ø–æ–¥—Ç—è–∂–∫–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)

–°—Ö–µ–º–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
-----------------
.. figure:: images/lesson14.jpg
   :width: 80%
   :align: center

   **–†–∏—Å. 1:** –°—Ö–µ–º–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Ä–æ—Ç–æ—Ä–Ω–æ–≥–æ —ç–Ω–∫–æ–¥–µ—Ä–∞

–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫
-------------------------------
–ü–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –∫–æ–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –±–∏–±–ª–∏–æ—Ç–µ–∫—É –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —ç–Ω–∫–æ–¥–µ—Ä–æ–º:

.. code-block:: bash

   pip install adafruit-circuitpython-rotaryio

–ó–∞–ø—É—Å–∫ –∫–æ–¥–∞
------------
1. –û—Ç–∫—Ä–æ–π—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä –∏–ª–∏ IDE (–Ω–∞–ø—Ä–∏–º–µ—Ä, Thonny –∏–ª–∏ VS Code) –Ω–∞ Raspberry Pi.
2. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π —Ñ–∞–π–ª **encoder_circuit.py** –≤ –ø–∞–ø–∫–µ `lessons/lesson12/`.
3. –í—Å—Ç–∞–≤—å—Ç–µ –≤ —Ñ–∞–π–ª —Å–ª–µ–¥—É—é—â–∏–π –∫–æ–¥:

–ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º—ã
-------------
–§–∞–π–ª: `lessons/lesson11/encoder_circuit.py`

.. code-block:: python

    import time
    import board
    import digitalio
    import rotaryio

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —ç–Ω–∫–æ–¥–µ—Ä–∞
    # –í—ã—Ö–æ–¥—ã A –∏ B —ç–Ω–∫–æ–¥–µ—Ä–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã –∫ GPIO17 –∏ GPIO18 —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ
    encoder = rotaryio.IncrementalEncoder(board.D17, board.D18)

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–Ω–æ–ø–∫–∏ —ç–Ω–∫–æ–¥–µ—Ä–∞
    button = digitalio.DigitalInOut(board.D27)  # –ö–Ω–æ–ø–∫–∞ –Ω–∞ GPIO27
    button.direction = digitalio.Direction.INPUT
    button.pull = digitalio.Pull.UP  # –ü–æ–¥—Ç—è–∂–∫–∞ –∫ VCC (–∫–Ω–æ–ø–∫–∞ –∑–∞–º—ã–∫–∞–µ—Ç –Ω–∞ GND)

    # –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    last_position = 0
    counter = 0
    button_state = False
    last_button_state = False

    # –ì–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª
    try:
        print("–†–æ—Ç–æ—Ä–Ω—ã–π —ç–Ω–∫–æ–¥–µ—Ä: –ø–æ–≤–æ—Ä–∞—á–∏–≤–∞–π—Ç–µ —Ä—É—á–∫—É –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ–µ")
        print("–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞")
        
        while True:
            # –°—á–∏—Ç—ã–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ —ç–Ω–∫–æ–¥–µ—Ä–∞
            current_position = encoder.position
            
            # –ï—Å–ª–∏ –ø–æ–ª–æ–∂–µ–Ω–∏–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å, –≤—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            if current_position != last_position:
                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Ä–∞—â–µ–Ω–∏—è
                if current_position > last_position:
                    direction = "–ø–æ —á–∞—Å–æ–≤–æ–π —Å—Ç—Ä–µ–ª–∫–µ"
                    counter += 1
                else:
                    direction = "–ø—Ä–æ—Ç–∏–≤ —á–∞—Å–æ–≤–æ–π —Å—Ç—Ä–µ–ª–∫–∏"
                    counter -= 1
                
                # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
                print(f"–ü–æ–ª–æ–∂–µ–Ω–∏–µ: {current_position}, –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: {direction}, –°—á–µ—Ç—á–∏–∫: {counter}")
                
                # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ
                last_position = current_position
            
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏
            button_state = not button.value  # –ò–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ, —Ç–∞–∫ –∫–∞–∫ –∫–Ω–æ–ø–∫–∞ –ø–æ–¥—Ç—è–Ω—É—Ç–∞ –∫ VCC
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–Ω–æ–ø–∫–∏ (–æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ —Ñ—Ä–æ–Ω—Ç–∞)
            if button_state and not last_button_state:
                print("–ö–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞! –°–±—Ä–æ—Å —Å—á–µ—Ç—á–∏–∫–∞.")
                counter = 0
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
            last_button_state = button_state
            
            # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏
            time.sleep(0.01)
            
    except KeyboardInterrupt:
        print("\n–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")


–†–∞–∑–±–æ—Ä –∫–æ–¥–∞
------------
- `rotaryio.IncrementalEncoder(board.D17, board.D18)` ‚Äì –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —ç–Ω–∫–æ–¥–µ—Ä–∞ —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –ø–∏–Ω–æ–≤ A –∏ B –∫ GPIO17 –∏ GPIO18.
- `button = digitalio.DigitalInOut(board.D27)` ‚Äì –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∏–Ω–∞ GPIO27 –¥–ª—è –∫–Ω–æ–ø–∫–∏ —ç–Ω–∫–æ–¥–µ—Ä–∞.
- `button.pull = digitalio.Pull.UP` ‚Äì —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ–¥—Ç—è–≥–∏–≤–∞—é—â–µ–≥–æ —Ä–µ–∑–∏—Å—Ç–æ—Ä–∞ –¥–ª—è –∫–Ω–æ–ø–∫–∏.
- `encoder.position` ‚Äì —Ç–µ–∫—É—â–µ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ —ç–Ω–∫–æ–¥–µ—Ä–∞, —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è –∏–ª–∏ —É–º–µ–Ω—å—à–∞–µ—Ç—Å—è –ø—Ä–∏ –≤—Ä–∞—â–µ–Ω–∏–∏.
- –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Ä–∞—â–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª–æ–∂–µ–Ω–∏—è.
- –û–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ñ—Ä–æ–Ω—Ç–∞ —Å–∏–≥–Ω–∞–ª–∞ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –º–Ω–æ–≥–æ–∫—Ä–∞—Ç–Ω–æ–≥–æ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è.
- –°–±—Ä–æ—Å —Å—á–µ—Ç—á–∏–∫–∞ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É —ç–Ω–∫–æ–¥–µ—Ä–∞.

–û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
-------------------
1. –ü—Ä–∏ –≤—Ä–∞—â–µ–Ω–∏–∏ —ç–Ω–∫–æ–¥–µ—Ä–∞ –ø–æ —á–∞—Å–æ–≤–æ–π —Å—Ç—Ä–µ–ª–∫–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ –∏ —Å—á–µ—Ç—á–∏–∫ —É–≤–µ–ª–∏—á–∏–≤–∞—é—Ç—Å—è.
2. –ü—Ä–∏ –≤—Ä–∞—â–µ–Ω–∏–∏ –ø—Ä–æ—Ç–∏–≤ —á–∞—Å–æ–≤–æ–π —Å—Ç—Ä–µ–ª–∫–∏ –ø–æ–ª–æ–∂–µ–Ω–∏–µ –∏ —Å—á–µ—Ç—á–∏–∫ —É–º–µ–Ω—å—à–∞—é—Ç—Å—è.
3. –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É —ç–Ω–∫–æ–¥–µ—Ä–∞ —Å—á–µ—Ç—á–∏–∫ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è –≤ 0.
4. –í –∫–æ–Ω—Å–æ–ª—å –≤—ã–≤–æ–¥–∏—Ç—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–º –ø–æ–ª–æ–∂–µ–Ω–∏–∏, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –≤—Ä–∞—â–µ–Ω–∏—è –∏ –∑–Ω–∞—á–µ–Ω–∏–∏ —Å—á–µ—Ç—á–∏–∫–∞.

–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã
-----------------
–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã –Ω–∞–∂–º–∏—Ç–µ **Ctrl + C** –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ.

–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! üéâ –í—ã —É—Å–ø–µ—à–Ω–æ –Ω–∞—É—á–∏–ª–∏—Å—å —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Ä–æ—Ç–æ—Ä–Ω—ã–º —ç–Ω–∫–æ–¥–µ—Ä–æ–º –ø—Ä–∏ –ø–æ–º–æ—â–∏ CircuitPython! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç–Ω–∫–æ–¥–µ—Ä –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–µ–Ω—é, —Ä–µ–≥—É–ª—è—Ç–æ—Ä–æ–≤ –≥—Ä–æ–º–∫–æ—Å—Ç–∏, —è—Ä–∫–æ—Å—Ç–∏ –∏ –¥—Ä—É–≥–∏—Ö –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤ —Å–≤–æ–∏—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö.