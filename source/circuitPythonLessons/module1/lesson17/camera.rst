============================================================
–£—Ä–æ–∫ 17: –†–∞–±–æ—Ç–∞ —Å –∫–∞–º–µ—Ä–æ–π Raspberry Pi (CircuitPython) üì∑
============================================================

–¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∞—è —á–∞—Å—Ç—å
-------------------
–ö–∞–º–µ—Ä–∞ Raspberry Pi ‚Äì —ç—Ç–æ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –º–æ–¥—É–ª—å –∫–∞–º–µ—Ä—ã –¥–ª—è Raspberry Pi, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é –∫ –ø–ª–∞—Ç–µ —á–µ—Ä–µ–∑ CSI (Camera Serial Interface). –°—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–æ–¥–µ–ª–µ–π –∫–∞–º–µ—Ä, –≤–∫–ª—é—á–∞—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –∏ NoIR (–±–µ–∑ –ò–ö-—Ñ–∏–ª—å—Ç—Ä–∞). –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–∞–º–µ—Ä–æ–π –≤ CircuitPython –º—ã –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫—É `picamera2`, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π API –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–∞–º–µ—Ä–æ–π –Ω–∞ Python.

–í —ç—Ç–æ–º —É—Ä–æ–∫–µ –º—ã –Ω–∞—É—á–∏–º—Å—è –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –∏–∑–º–µ–Ω—è—Ç—å –∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø—Ä–æ—Å—Ç—É—é —Å–∏—Å—Ç–µ–º—É –≤–∏–¥–µ–æ–Ω–∞–±–ª—é–¥–µ–Ω–∏—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∫–∞–º–µ—Ä—ã Raspberry Pi.

–ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
----------------------
- Raspberry Pi
- –ú–æ–¥—É–ª—å –∫–∞–º–µ—Ä—ã Raspberry Pi
- (–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å—ä–µ–º–∫–∏

–°—Ö–µ–º–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
-----------------
.. figure:: images/camera.png
   :width: 80%
   :align: center

   **–†–∏—Å. 1:** –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–∞–º–µ—Ä—ã –∫ Raspberry Pi

–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫
-------------------------------
–ü–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –∫–æ–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –±–∏–±–ª–∏–æ—Ç–µ–∫—É picamera2 –∏ OpenCV:

.. code-block:: bash

   sudo apt-get update
   sudo apt-get install -y python3-picamera2
   sudo apt-get install -y python3-opencv

–ó–∞–ø—É—Å–∫ –∫–æ–¥–∞
------------
1. –û—Ç–∫—Ä–æ–π—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä –∏–ª–∏ IDE (–Ω–∞–ø—Ä–∏–º–µ—Ä, Thonny –∏–ª–∏ VS Code) –Ω–∞ Raspberry Pi.
2. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π —Ñ–∞–π–ª **camera_circuit.py** –≤ –ø–∞–ø–∫–µ `lessons/lesson17/`.
3. –í—Å—Ç–∞–≤—å—Ç–µ –≤ —Ñ–∞–π–ª —Å–ª–µ–¥—É—é—â–∏–π –∫–æ–¥:

–ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º—ã
-------------
–§–∞–π–ª: `lessons/lesson17/camera_circuit.py`

.. code-block:: python

    import time
    import os
    import datetime
    from picamera2 import Picamera2
    import cv2
    import numpy as np
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    SAVE_DIR = "camera_captures"
    os.makedirs(SAVE_DIR, exist_ok=True)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞–º–µ—Ä—ã
    picam2 = Picamera2()
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è —Ñ–æ—Ç–æ (—Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏–∑–º–µ–Ω–µ–Ω–æ)
    photo_config = picam2.create_still_configuration(
        main={"size": (1920, 1080), "format": "RGB"},
        lores={"size": (640, 480), "format": "YUV420"}
    )
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è –≤–∏–¥–µ–æ (–º–µ–Ω—å—à–µ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏)
    video_config = picam2.create_preview_configuration(
        main={"size": (640, 480), "format": "RGB"}
    )
    
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞—Ö–≤–∞—Ç–∞ —Ñ–æ—Ç–æ —Å —Ç–µ–∫—É—â–µ–π –¥–∞—Ç–æ–π/–≤—Ä–µ–º–µ–Ω–µ–º –≤ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
    def capture_photo():
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–∞–º–µ—Ä—É –¥–ª—è —Ñ–æ—Ç–æ
        picam2.configure(photo_config)
        picam2.start()
        
        # –î–∞–µ–º –∫–∞–º–µ—Ä–µ –≤—Ä–µ–º—è –Ω–∞ –∞–¥–∞–ø—Ç–∞—Ü–∏—é
        time.sleep(2)
        
        # –°–æ–∑–¥–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ —Å —Ç–µ–∫—É—â–µ–π –¥–∞—Ç–æ–π –∏ –≤—Ä–µ–º–µ–Ω–µ–º
        timestamp = datetime.datetime.now().strftime("%Y%m%d-%H%M%S")
        filename = f"{SAVE_DIR}/photo_{timestamp}.jpg"
        
        # –ó–∞—Ö–≤–∞—Ç—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        picam2.capture_file(filename)
        
        print(f"–§–æ—Ç–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –∫–∞–∫ {filename}")
        
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–∞–º–µ—Ä—É
        picam2.stop()
        return filename
    
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞—Ö–≤–∞—Ç–∞ —Ñ–æ—Ç–æ —Å —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏
    def capture_photo_with_effects():
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–∞–º–µ—Ä—É –¥–ª—è —Ñ–æ—Ç–æ
        picam2.configure(photo_config)
        picam2.start()
        
        # –î–∞–µ–º –∫–∞–º–µ—Ä–µ –≤—Ä–µ–º—è –Ω–∞ –∞–¥–∞–ø—Ç–∞—Ü–∏—é
        time.sleep(2)
        
        # –°–æ–∑–¥–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ —Å —Ç–µ–∫—É—â–µ–π –¥–∞—Ç–æ–π –∏ –≤—Ä–µ–º–µ–Ω–µ–º
        timestamp = datetime.datetime.now().strftime("%Y%m%d-%H%M%S")
        
        # –ó–∞—Ö–≤–∞—Ç—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –º–∞—Å—Å–∏–≤
        img = picam2.capture_array()
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç—ã (–∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ –æ—Ç—Ç–µ–Ω–∫–∏ —Å–µ—Ä–æ–≥–æ)
        gray_img = cv2.cvtColor(img, cv2.COLOR_RGB2GRAY)
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º –¥–µ—Ç–µ–∫—Ç–æ—Ä –∫—Ä–∞–µ–≤ Canny
        edges = cv2.Canny(gray_img, 100, 200)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        gray_filename = f"{SAVE_DIR}/gray_{timestamp}.jpg"
        edges_filename = f"{SAVE_DIR}/edges_{timestamp}.jpg"
        
        cv2.imwrite(gray_filename, gray_img)
        cv2.imwrite(edges_filename, edges)
        
        print(f"–ß—ë—Ä–Ω–æ-–±–µ–ª–æ–µ —Ñ–æ—Ç–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –∫–∞–∫ {gray_filename}")
        print(f"–§–æ—Ç–æ —Å –≤—ã–¥–µ–ª–µ–Ω–Ω—ã–º–∏ –∫—Ä–∞—è–º–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –∫–∞–∫ {edges_filename}")
        
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–∞–º–µ—Ä—É
        picam2.stop()
        return gray_filename, edges_filename
    
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ—Å—Ç–æ–≥–æ –≤–∏–¥–µ–æ–Ω–∞–±–ª—é–¥–µ–Ω–∏—è —Å –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ–º –¥–≤–∏–∂–µ–Ω–∏—è
    def motion_detection(duration=30):
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–∞–º–µ—Ä—É –¥–ª—è –≤–∏–¥–µ–æ
        picam2.configure(video_config)
        picam2.start()
        
        # –î–∞–µ–º –∫–∞–º–µ—Ä–µ –≤—Ä–µ–º—è –Ω–∞ –∞–¥–∞–ø—Ç–∞—Ü–∏—é
        time.sleep(2)
        
        # –ó–∞—Ö–≤–∞—Ç—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–π –∫–∞–¥—Ä –∫–∞–∫ —Ñ–æ–Ω
        background = picam2.capture_array()
        background_gray = cv2.cvtColor(background, cv2.COLOR_RGB2GRAY)
        background_gray = cv2.GaussianBlur(background_gray, (21, 21), 0)
        
        print("–ù–∞—á–∞–ª–æ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –¥–≤–∏–∂–µ–Ω–∏—è. –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏.")
        
        start_time = time.time()
        motion_detected = False
        
        try:
            while time.time() - start_time < duration:
                # –ó–∞—Ö–≤–∞—Ç—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –∫–∞–¥—Ä
                current_frame = picam2.capture_array()
                
                # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ –æ—Ç—Ç–µ–Ω–∫–∏ —Å–µ—Ä–æ–≥–æ
                gray = cv2.cvtColor(current_frame, cv2.COLOR_RGB2GRAY)
                gray = cv2.GaussianBlur(gray, (21, 21), 0)
                
                # –í—ã—á–∏—Å–ª—è–µ–º —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É —Ç–µ–∫—É—â–∏–º –∫–∞–¥—Ä–æ–º –∏ —Ñ–æ–Ω–æ–º
                frame_delta = cv2.absdiff(background_gray, gray)
                thresh = cv2.threshold(frame_delta, 25, 255, cv2.THRESH_BINARY)[1]
                
                # –†–∞—Å—à–∏—Ä—è–µ–º –æ–±–ª–∞—Å—Ç—å –¥–ª—è –ª—É—á—à–µ–≥–æ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è
                thresh = cv2.dilate(thresh, None, iterations=2)
                
                # –ù–∞—Ö–æ–¥–∏–º –∫–æ–Ω—Ç—É—Ä—ã –Ω–∞ –±–∏–Ω–∞—Ä–Ω–æ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏
                contours, _ = cv2.findContours(thresh.copy(), cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç—É—Ä—ã –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞
                for contour in contours:
                    if cv2.contourArea(contour) < 500:  # –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–∞–ª–µ–Ω—å–∫–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
                        continue
                    
                    # –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–æ–ª—å—à–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ - –¥–≤–∏–∂–µ–Ω–∏–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ
                    if not motion_detected:
                        motion_detected = True
                        print("–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –¥–≤–∏–∂–µ–Ω–∏–µ!")
                        
                        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–¥—Ä —Å –¥–≤–∏–∂–µ–Ω–∏–µ–º
                        timestamp = datetime.datetime.now().strftime("%Y%m%d-%H%M%S")
                        motion_filename = f"{SAVE_DIR}/motion_{timestamp}.jpg"
                        
                        # –†–∏—Å—É–µ–º –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –≤–æ–∫—Ä—É–≥ –æ–±–ª–∞—Å—Ç–∏ –¥–≤–∏–∂–µ–Ω–∏—è
                        (x, y, w, h) = cv2.boundingRect(contour)
                        cv2.rectangle(current_frame, (x, y), (x + w, y + h), (0, 255, 0), 2)
                        
                        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç
                        cv2.putText(current_frame, "–î–≤–∏–∂–µ–Ω–∏–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ", (10, 20),
                                   cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0, 0, 255), 2)
                        
                        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                        cv2.imwrite(motion_filename, cv2.cvtColor(current_frame, cv2.COLOR_RGB2BGR))
                        print(f"–ö–∞–¥—Ä —Å –¥–≤–∏–∂–µ–Ω–∏–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∫–∞–∫ {motion_filename}")
                
                # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞
                time.sleep(0.1)
                
                # –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–æ–Ω (–º–µ–¥–ª–µ–Ω–Ω–∞—è –∞–¥–∞–ø—Ç–∞—Ü–∏—è)
                if not motion_detected:
                    cv2.accumulateWeighted(gray, background_gray, 0.1)
                else:
                    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è
                    motion_detected = False
        
        except KeyboardInterrupt:
            print("\n–û–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –¥–≤–∏–∂–µ–Ω–∏—è –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.")
        
        finally:
            # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–∞–º–µ—Ä—É
            picam2.stop()
    
    # –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–¥
    try:
        print("–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–∞–º–µ—Ä–æ–π Raspberry Pi")
        print("1. –ó–∞—Ö–≤–∞—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏")
        print("2. –ó–∞—Ö–≤–∞—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Å —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏")
        print("3. –û–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –¥–≤–∏–∂–µ–Ω–∏—è (30 —Å–µ–∫—É–Ω–¥)")
        
        choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é (1-3): ")
        
        if choice == "1":
            photo_path = capture_photo()
            print(f"–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: {photo_path}")
        
        elif choice == "2":
            gray_path, edges_path = capture_photo_with_effects()
            print(f"–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Å —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã: {gray_path}, {edges_path}")
        
        elif choice == "3":
            motion_detection(30)  # 30 —Å–µ–∫—É–Ω–¥ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –¥–≤–∏–∂–µ–Ω–∏—è
        
        else:
            print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ 1, 2 –∏–ª–∏ 3.")
    
    except KeyboardInterrupt:
        print("\n–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")


–†–∞–∑–±–æ—Ä –∫–æ–¥–∞
------------
- `Picamera2()` ‚Äì –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞–º–µ—Ä—ã —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ API Picamera2.
- `create_still_configuration()` ‚Äì —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –≤—ã—Å–æ–∫–æ–≥–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è.
- `create_preview_configuration()` ‚Äì —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è –≤–∏–¥–µ–æ–ø–æ—Ç–æ–∫–∞ —Å –º–µ–Ω—å—à–∏–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ–º.
- `capture_photo()` ‚Äì —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞—Ö–≤–∞—Ç–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –µ–µ —Å –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ—Ç–∫–æ–π.
- `capture_photo_with_effects()` ‚Äì —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞—Ö–≤–∞—Ç–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ —Å –ø–æ–º–æ—â—å—é OpenCV:
  - –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ –æ—Ç—Ç–µ–Ω–∫–∏ —Å–µ—Ä–æ–≥–æ.
  - –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –¥–µ—Ç–µ–∫—Ç–æ—Ä–∞ –∫—Ä–∞–µ–≤ Canny.
- `motion_detection()` ‚Äì —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –¥–≤–∏–∂–µ–Ω–∏—è:
  - –ó–∞—Ö–≤–∞—Ç —Ñ–æ–Ω–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.
  - –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –∫–∞–¥—Ä–∞ —Å —Ñ–æ–Ω–æ–º.
  - –û–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π (–∫–æ–Ω—Ç—É—Ä–æ–≤).
  - –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–∞–¥—Ä–æ–≤ —Å –æ–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã–º –¥–≤–∏–∂–µ–Ω–∏–µ–º.

–û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
-------------------
1. –ü—Ä–∏ –≤—ã–±–æ—Ä–µ –æ–ø—Ü–∏–∏ 1 –∫–∞–º–µ—Ä–∞ –¥–µ–ª–∞–µ—Ç —Å–Ω–∏–º–æ–∫ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –µ–≥–æ –≤ –ø–∞–ø–∫—É `camera_captures`.
2. –ü—Ä–∏ –≤—ã–±–æ—Ä–µ –æ–ø—Ü–∏–∏ 2 –∫–∞–º–µ—Ä–∞ –¥–µ–ª–∞–µ—Ç —Å–Ω–∏–º–æ–∫, –ø—Ä–∏–º–µ–Ω—è–µ—Ç –∫ –Ω–µ–º—É —ç—Ñ—Ñ–µ–∫—Ç—ã (—á–µ—Ä–Ω–æ-–±–µ–ª—ã–π –∏ –≤—ã–¥–µ–ª–µ–Ω–∏–µ –∫—Ä–∞–µ–≤) –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã.
3. –ü—Ä–∏ –≤—ã–±–æ—Ä–µ –æ–ø—Ü–∏–∏ 3 –∫–∞–º–µ—Ä–∞ –∑–∞–ø—É—Å–∫–∞–µ—Ç —Å–∏—Å—Ç–µ–º—É –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –¥–≤–∏–∂–µ–Ω–∏—è –Ω–∞ 30 —Å–µ–∫—É–Ω–¥, –∫–æ—Ç–æ—Ä–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∫–∞–¥—Ä—ã –ø—Ä–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–∏ –¥–≤–∏–∂–µ–Ω–∏—è.

.. note::
   –î–ª—è –Ω–∞–∏–ª—É—á—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ö–æ—Ä–æ—à–µ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ. –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –¥–≤–∏–∂–µ–Ω–∏—è –º–æ–≥—É—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Å–ª–æ–≤–∏–π –æ–∫—Ä—É–∂–∞—é—â–µ–π —Å—Ä–µ–¥—ã. –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å –ø–æ–º–æ—â—å—é OpenCV –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–µ—Å—É—Ä—Å–æ–µ–º–∫–æ–π –Ω–∞ Raspberry Pi.

–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã
-----------------
–ü–æ –æ–∫–æ–Ω—á–∞–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã –ø—Ä–æ–≥—Ä–∞–º–º—ã –∏–ª–∏ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ **Ctrl + C** –∫–∞–º–µ—Ä–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è.

–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! üéâ –í—ã —É—Å–ø–µ—à–Ω–æ –Ω–∞—É—á–∏–ª–∏—Å—å —Ä–∞–±–æ—Ç–∞—Ç—å —Å –∫–∞–º–µ—Ä–æ–π Raspberry Pi —Å –ø–æ–º–æ—â—å—é CircuitPython –∏ OpenCV! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞–º–µ—Ä—É –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤ —Å —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ–º –æ–±—Ä–∞–∑–æ–≤, –≤–∏–¥–µ–æ–Ω–∞–±–ª—é–¥–µ–Ω–∏–µ–º –∏ –¥—Ä—É–≥–∏—Ö –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–≥–æ –∑—Ä–µ–Ω–∏—è.