============================================================
Урок 14: Работа с энкодером и кнопкой
============================================================

Теоретическая часть
-------------------
**Роторный энкодер** – это поворотный механический переключатель, способный дискретно отслеживать угловое перемещение и направление вращения. Он часто используется для выбора меню или регулировки параметров (например, громкости). Большинство энкодеров также имеют встроенную кнопку (при нажатии на вал).

**Button** (кнопка) – простой цифровой вход, который мы используем для обнуления счётчика.

Необходимые компоненты
----------------------
- Raspberry Pi
- Роторный энкодер (Rotary Encoder) с двумя цифровыми выходами (A, B)
- Кнопка на валу энкодера (или отдельная кнопка)
- Соединительные провода

Схема подключения
-----------------
.. figure:: images/lesson14.jpg
   :width: 80%
   :align: center

Запуск кода
-----------
1. Создайте файл `rotary_encoder.py` в папке `lessons/lesson12/`:

   .. code-block:: bash

      nano lessons/lesson12/rotary_encoder.py

2. Вставьте следующий код и сохраните.
3. Запустите программу:

   .. code-block:: bash

      python3 lessons/lesson12/rotary_encoder.py

Код программы
-------------
Файл: `lessons/lesson12/rotary_encoder.py`

.. code-block:: python

   #!/usr/bin/env python3
   from gpiozero import RotaryEncoder, Button
   from time import sleep

   # Инициализация энкодера и кнопки
   encoder = RotaryEncoder(a=17, b=18)  # энкодер подключён к GPIO17 (CLK) и GPIO18 (DT)
   button = Button(27)                  # кнопка подключена к GPIO27

   global_counter = 0  # глобальный счётчик положения

   def rotary_change():
       """ Обновляем глобальный счётчик при вращении энкодера. """
       global global_counter
       global_counter += encoder.steps  # прибавляем число шагов энкодера
       encoder.steps = 0               # сбрасываем счётчик шагов энкодера
       print('Global Counter =', global_counter)

   def reset_counter():
       """ Сбросить глобальный счётчик до нуля при нажатии кнопки. """
       global global_counter
       global_counter = 0
       print('Counter reset')

   # Связываем кнопку с функцией сброса
   button.when_pressed = reset_counter

   try:
       # Основной цикл – мониторим изменения энкодера
       while True:
           rotary_change()
           sleep(0.1)
   except KeyboardInterrupt:
       pass

Разбор кода
-----------
- `RotaryEncoder(a=17, b=18)` – указываем GPIO, к которым подключены выходы энкодера (A=CLK, B=DT).
- `Button(27)` – кнопка на GPIO27.
- `encoder.steps` – свойство, указывающее число шагов, накопленных с момента последнего сброса.
- `global_counter += encoder.steps` – обновление счётчика при повороте.
- `button.when_pressed = reset_counter` – при нажатии кнопки обнуляем счётчик.
- `sleep(0.1)` – небольшая задержка, чтобы снизить нагрузку на процессор.

Ожидаемый результат
-------------------
1. При вращении энкодера счётчик (`global_counter`) в консоли изменяется.
2. При нажатии кнопки счётчик обнуляется.

.. .. figure:: images/rotary_encoder.gif
..    :width: 50%
..    :align: center

   **Рис. 2:** Демонстрация работы энкодера и кнопки

Завершение работы
-----------------
Нажмите **Ctrl + C** для выхода. Поздравляем! Теперь вы умеете считывать направление и количество шагов роторного энкодера и сбрасывать счётчик кнопкой.