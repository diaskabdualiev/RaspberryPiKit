============================================================
–£—Ä–æ–∫ 16: –ú–æ–¥—É–ª—å PCA9685 –¥–ª—è —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥–æ–≤  ü§ñ
============================================================

–¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∞—è —á–∞—Å—Ç—å
-------------------
PCA9685 ‚Äì —ç—Ç–æ 16-–∫–∞–Ω–∞–ª—å–Ω—ã–π –®–ò–ú (PWM) –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä —Å I2C –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ —É–ø—Ä–∞–≤–ª—è—Ç—å 16 —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥–∞–º–∏ –∏–ª–∏ –¥—Ä—É–≥–∏–º–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏, —Ç—Ä–µ–±—É—é—â–∏–º–∏ –®–ò–ú-—Å–∏–≥–Ω–∞–ª. –≠—Ç–æ—Ç –º–æ–¥—É–ª—å –æ—Å–æ–±–µ–Ω–Ω–æ –ø–æ–ª–µ–∑–µ–Ω –¥–ª—è –ø—Ä–æ–µ–∫—Ç–æ–≤ —Ä–æ–±–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫–∏ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏, –≥–¥–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º –¥–≤–∏–≥–∞—Ç–µ–ª–µ–π –∏–ª–∏ —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥–æ–≤.

–û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ PCA9685:
- –û—Å–≤–æ–±–æ–∂–¥–∞–µ—Ç GPIO –ø–∏–Ω—ã Raspberry Pi
- –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω—ã–π –®–ò–ú-—Å–∏–≥–Ω–∞–ª –±–µ–∑ –¥–∂–∏—Ç—Ç–µ—Ä–∞
- –ò–º–µ–µ—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é —Ç–∞–∫—Ç–æ–≤—É—é —á–∞—Å—Ç–æ—Ç—É, —á—Ç–æ –¥–µ–ª–∞–µ—Ç —Å–∏–≥–Ω–∞–ª—ã —Ç–æ—á–Ω—ã–º–∏
- –ü–æ–∑–≤–æ–ª—è–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å 16 —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏ —á–µ—Ä–µ–∑ –æ–¥–∏–Ω I2C –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å

–ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
----------------------
- Raspberry Pi
- –ú–æ–¥—É–ª—å PCA9685
- –°–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, SG90)
- –í–Ω–µ—à–Ω–∏–π –∏—Å—Ç–æ—á–Ω–∏–∫ –ø–∏—Ç–∞–Ω–∏—è 5–í –¥–ª—è —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥–æ–≤
- –°–æ–µ–¥–∏–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–æ–¥–∞

–°—Ö–µ–º–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
-----------------
.. figure:: images/pca9685.png
   :width: 80%
   :align: center

   **–†–∏—Å. 1:** –°—Ö–µ–º–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è PCA9685 –∏ —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥–æ–≤

–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫
-------------------------------
–ü–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –∫–æ–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –±–∏–±–ª–∏–æ—Ç–µ–∫—É –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å PCA9685:

.. code-block:: bash

   pip install adafruit-circuitpython-pca9685 adafruit-circuitpython-servokit

–ó–∞–ø—É—Å–∫ –∫–æ–¥–∞
------------
1. –û—Ç–∫—Ä–æ–π—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä –∏–ª–∏ IDE (–Ω–∞–ø—Ä–∏–º–µ—Ä, Thonny –∏–ª–∏ VS Code) –Ω–∞ Raspberry Pi.
2. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π —Ñ–∞–π–ª **pca9685_circuit.py** –≤ –ø–∞–ø–∫–µ `lessons/lesson16/`.
3. –í—Å—Ç–∞–≤—å—Ç–µ –≤ —Ñ–∞–π–ª —Å–ª–µ–¥—É—é—â–∏–π –∫–æ–¥:

–ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º—ã
-------------
–§–∞–π–ª: `lessons/lesson16/pca9685_circuit.py`

.. code-block:: python

    import time
    import board
    import busio
    from adafruit_pca9685 import PCA9685
    from adafruit_motor import servo

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è I2C –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    i2c = busio.I2C(board.SCL, board.SDA)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è PCA9685
    pca = PCA9685(i2c)
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —á–∞—Å—Ç–æ—Ç—ã –®–ò–ú (50 –ì—Ü –¥–ª—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥–æ–≤)
    pca.frequency = 50
    
    # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç—ã —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥–æ–≤
    # –ó–¥–µ—Å—å –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–≤—ã–µ 3 –∫–∞–Ω–∞–ª–∞ (0, 1, 2) –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞
    servo0 = servo.Servo(pca.channels[0], min_pulse=500, max_pulse=2500)
    servo1 = servo.Servo(pca.channels[1], min_pulse=500, max_pulse=2500)
    servo2 = servo.Servo(pca.channels[2], min_pulse=500, max_pulse=2500)
    
    # –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥–æ–≤ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
    servos = [servo0, servo1, servo2]
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è
    def sequential_movement():
        print("–ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥–æ–≤...")
        for i, servo_motor in enumerate(servos):
            print(f"–°–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥ {i}: –ø–æ–≤–æ—Ä–æ—Ç –Ω–∞ 0¬∞")
            servo_motor.angle = 0
            time.sleep(0.5)
            
            print(f"–°–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥ {i}: –ø–æ–≤–æ—Ä–æ—Ç –Ω–∞ 90¬∞")
            servo_motor.angle = 90
            time.sleep(0.5)
            
            print(f"–°–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥ {i}: –ø–æ–≤–æ—Ä–æ—Ç –Ω–∞ 180¬∞")
            servo_motor.angle = 180
            time.sleep(0.5)
            
            print(f"–°–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥ {i}: –≤–æ–∑–≤—Ä–∞—Ç –Ω–∞ 90¬∞")
            servo_motor.angle = 90
            time.sleep(0.5)
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è
    def synchronized_movement():
        print("–°–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥–æ–≤...")
        
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥–æ–≤ –≤ –Ω–∞—á–∞–ª—å–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ
        for servo_motor in servos:
            servo_motor.angle = 0
        time.sleep(1)
        
        # –ü–ª–∞–≤–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥–æ–≤ –æ—Ç 0¬∞ –¥–æ 180¬∞
        for angle in range(0, 181, 5):
            for servo_motor in servos:
                servo_motor.angle = angle
            print(f"–£–≥–æ–ª: {angle}¬∞")
            time.sleep(0.05)
        
        # –ü–∞—É–∑–∞ –≤ –∫–æ–Ω–µ—á–Ω–æ–º –ø–æ–ª–æ–∂–µ–Ω–∏–∏
        time.sleep(1)
        
        # –ü–ª–∞–≤–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥–æ–≤ –æ—Ç 180¬∞ –¥–æ 0¬∞
        for angle in range(180, -1, -5):
            for servo_motor in servos:
                servo_motor.angle = angle
            print(f"–£–≥–æ–ª: {angle}¬∞")
            time.sleep(0.05)
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤–æ–ª–Ω–æ–≤–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è
    def wave_movement():
        print("–í–æ–ª–Ω–æ–≤–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥–æ–≤...")
        for _ in range(3):  # –ü–æ–≤—Ç–æ—Ä–∏—Ç—å 3 —Ä–∞–∑–∞
            # –í–æ–ª–Ω–∞ –≤–ø–µ—Ä–µ–¥
            for i in range(len(servos)):
                servos[i].angle = 150
                time.sleep(0.2)
                servos[i].angle = 30
            
            # –í–æ–ª–Ω–∞ –Ω–∞–∑–∞–¥
            for i in range(len(servos) - 1, -1, -1):
                servos[i].angle = 150
                time.sleep(0.2)
                servos[i].angle = 30
    
    # –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
    try:
        print("PCA9685 –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
        print("–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –¥–≤–∏–∂–µ–Ω–∏—è —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥–æ–≤")
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥—ã –≤ –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ
        for servo_motor in servos:
            servo_motor.angle = 90
        time.sleep(1)
        
        # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –¥–≤–∏–∂–µ–Ω–∏—è
        sequential_movement()
        time.sleep(1)
        
        synchronized_movement()
        time.sleep(1)
        
        wave_movement()
        time.sleep(1)
        
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤—Å–µ —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥—ã –≤ –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ
        print("–í–æ–∑–≤—Ä–∞—Ç –≤ –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ...")
        for servo_motor in servos:
            servo_motor.angle = 90
        
        print("–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        
    except KeyboardInterrupt:
        # –ü–µ—Ä–µ–¥ –≤—ã—Ö–æ–¥–æ–º —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥—ã –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ
        for servo_motor in servos:
            servo_motor.angle = 90
        print("\n–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")


–†–∞–∑–±–æ—Ä –∫–æ–¥–∞
------------
- `busio.I2C(board.SCL, board.SDA)` ‚Äì –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è I2C –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –¥–ª—è —Å–≤—è–∑–∏ —Å PCA9685.
- `PCA9685(i2c)` ‚Äì —Å–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ PCA9685.
- `pca.frequency = 50` ‚Äì —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —á–∞—Å—Ç–æ—Ç—ã –®–ò–ú –≤ 50 –ì—Ü, —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –¥–ª—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥–æ–≤.
- `servo.Servo(pca.channels[i], min_pulse=500, max_pulse=2500)` ‚Äì —Å–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤ —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–∞–Ω–∞–ª–∞.
- `min_pulse` –∏ `max_pulse` ‚Äì –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏–º–ø—É–ª—å—Å–∞ –≤ –º–∏–∫—Ä–æ—Å–µ–∫—É–Ω–¥–∞—Ö.
- `servo_motor.angle = XX` ‚Äì —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —É–≥–ª–∞ –ø–æ–≤–æ—Ä–æ—Ç–∞ —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥–∞.
- –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ç—Ä–µ—Ö —Ç–∏–ø–æ–≤ –¥–≤–∏–∂–µ–Ω–∏—è:
  - `sequential_movement()` ‚Äì –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥–æ–≤.
  - `synchronized_movement()` ‚Äì —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥–æ–≤.
  - `wave_movement()` ‚Äì –≤–æ–ª–Ω–æ–≤–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ, –∏–º–∏—Ç–∏—Ä—É—é—â–µ–µ –≤–æ–ª–Ω—É.

–û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
-------------------
1. –í—Å–µ —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥—ã —Å–Ω–∞—á–∞–ª–∞ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é—Ç—Å—è –≤ –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ (90¬∞).
2. –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥–∞ (0¬∞ -> 90¬∞ -> 180¬∞ -> 90¬∞).
3. –ó–∞—Ç–µ–º –≤—Å–µ —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥—ã —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –ø–ª–∞–≤–Ω–æ –ø–æ–≤–æ—Ä–∞—á–∏–≤–∞—é—Ç—Å—è –æ—Ç 0¬∞ –¥–æ 180¬∞ –∏ –æ–±—Ä–∞—Ç–Ω–æ.
4. –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –≤–æ–ª–Ω–æ–≤–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ, –≥–¥–µ —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥—ã –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ —Å–æ–∑–¥–∞—é—Ç —ç—Ñ—Ñ–µ–∫—Ç "–≤–æ–ª–Ω—ã".
5. –í –∫–æ–Ω—Ü–µ –≤—Å–µ —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥—ã –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç—Å—è –≤ –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ (90¬∞).

.. note::
   –ü—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥–æ–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ –ø–∏—Ç–∞–Ω–∏—è, —Ç–∞–∫ –∫–∞–∫ —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥—ã –º–æ–≥—É—Ç –ø–æ—Ç—Ä–µ–±–ª—è—Ç—å –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–π —Ç–æ–∫. –ù–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∑–∞–ø–∏—Ç—ã–≤–∞—Ç—å —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥—ã –æ—Ç Raspberry Pi –Ω–∞–ø—Ä—è–º—É—é, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø–µ—Ä–µ–≥—Ä—É–∑–∫–∏ –∏ –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã.

–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã
-----------------
–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã –Ω–∞–∂–º–∏—Ç–µ **Ctrl + C** –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ. –ü—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –≤—Å–µ —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥—ã —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é—Ç—Å—è –≤ –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ (90¬∞).

–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! üéâ –í—ã —É—Å–ø–µ—à–Ω–æ –Ω–∞—É—á–∏–ª–∏—Å—å —É–ø—Ä–∞–≤–ª—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥–∞–º–∏ —Å –ø–æ–º–æ—â—å—é –º–æ–¥—É–ª—è PCA9685 –∏ CircuitPython! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–µ —Ä–æ–±–æ—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã, —Ç—Ä–µ–±—É—é—â–∏–µ —Ç–æ—á–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º –¥–≤–∏–≥–∞—Ç–µ–ª–µ–π.