==========================================================
Урок 8: Управление сервоприводом SG90
==========================================================

Теоретическая часть
-------------------
Сервопривод SG90 – это компактный электромеханический привод, который позволяет вращать вал на определённый угол (обычно от 0 до 180 градусов). Управление углом происходит за счёт подачи ШИМ-сигнала (PWM) с различной скважностью (pulse width).

Необходимые компоненты
----------------------
- Raspberry Pi
- Сервопривод SG90 (или аналог)
- Макетная плата (breadboard) при необходимости
- Соединительные провода (3 провода: питание, земля, сигнал)

Схема подключения
-----------------
.. figure:: images/lesson8.jpg
   :width: 80%
   :align: center

Запуск кода
-----------
1. Создайте файл `servo.py` в папке `lessons/lesson8/`:

   .. code-block:: bash

      nano lessons/lesson8/servo.py

2. Скопируйте следующий код и сохраните файл.
3. Запустите программу:

   .. code-block:: bash

      python3 lessons/lesson8/servo.py

Код программы
-------------
Файл: `lessons/lesson8/servo.py`

.. code-block:: python

   from gpiozero import Servo
   from time import sleep

   # Указываем номер GPIO, к которому подключён сигнал серво
   myGPIO = 18

   # Коррекция (myCorrection) нужна, чтобы скомпенсировать особенности ШИМ для конкретного сервопривода
   myCorrection = 0.45

   # Минимальная и максимальная ширина импульса
   maxPW = (2.0 + myCorrection) / 1000
   minPW = (1.0 - myCorrection) / 1000

   # Инициализируем Servo из gpiozero, задав индивидуальные min/max ширины импульса
   servo = Servo(myGPIO, min_pulse_width=minPW, max_pulse_width=maxPW)

   try:
       while True:
           # Позиция "по центру" (примерно 90°)
           servo.mid()
           print("mid")
           sleep(0.5)

           # Позиция "минимум" (примерно 0°)
           servo.min()
           print("min")
           sleep(1)

           # Возвращаем обратно на 90°
           servo.mid()
           print("mid")
           sleep(0.5)

           # Позиция "максимум" (примерно 180°)
           servo.max()
           print("max")
           sleep(1)

   except KeyboardInterrupt:
       pass

Разбор кода
-----------
- `from gpiozero import Servo` – импорт класса Servo из библиотеки gpiozero.
- `myCorrection = 0.45` – корректирующий коэффициент, необходимый для точного позиционирования (значение может отличаться в зависимости от модели серво и Pi).
- `servo = Servo(myGPIO, min_pulse_width=minPW, max_pulse_width=maxPW)` – создаём объект сервопривода, указывая индивидуальные ширины импульса.
- `servo.min()`, `servo.mid()`, `servo.max()` – методы gpiozero, позволяющие быстро установить серво в 0°, ~90°, 180° соответственно.
- `sleep(...)` – временные задержки, дающие серво время на поворот.

Ожидаемый результат
-------------------
1. Серво будет поочерёдно переходить из позиции 90° (mid) -> 0° (min) -> 90° -> 180° (max). 
2. В консоль выводятся текущее состояние ("min", "mid", "max").

.. .. figure:: images/servo_movement.gif
..    :width: 50%
..    :align: center

   **Рис. 2:** Пример работы SG90 с Raspberry Pi

Завершение работы
-----------------
Нажмите **Ctrl + C** для остановки программы. Поздравляем! Теперь вы умеете использовать gpiozero для управления сервоприводом SG90 на Raspberry Pi.
